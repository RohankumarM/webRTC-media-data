{"version":3,"sources":["components/Video.js","components/Videos.js","components/draggable.js","components/dragDrop.js","components/Chat.js","components/Room.js","images/video-conference.svg","components/CreateRoom.js","App.js","serviceWorker.js","index.js"],"names":["Video","props","muteMicHandler","e","stream","video","srcObject","getTracks","filter","track","kind","setState","prevState","enabled","mic","muteVideoHandler","camera","state","settings","this","videoStream","nextProps","console","log","muteControls","showMuteControls","className","onClick","style","cursor","padding","fontSize","color","frameStyle","id","muted","autoPlay","videoStyles","ref","React","Component","Videos","rVideos","remoteStreams","_rVideos","map","rVideo","index","width","float","objectFit","borderRadius","autoplay","name","switchVideo","display","zIndex","position","backgroundColor","maxHeight","top","right","left","bottom","whiteSpace","Draggable","useState","pressed","setPressed","x","y","setPosition","useRef","useEffect","current","transform","onMouseMove","event","movementX","movementY","onMouseDown","onMouseUp","children","DragDrop","bgColor","setBgColor","changeBgColor","onDragEnter","preventDefault","stopPropagation","dataTransfer","dropEffect","items","length","onDragLeave","onDragOver","onDrop","files","sendFiles","Chat","message","setMessage","uid","user","setUser","imageZoom","setImageZoom","selectedImage","setSelectedImage","scrollToBottom","chat","document","getElementById","scrollTop","scrollHeight","data","sendMessage","msg","renderMessage","userType","msgDiv","type","sender","text","alt","src","marginLeft","marginRight","messages","reader","FileReader","onload","target","result","alert","readAsDataURL","onSubmit","placeholder","onChange","value","App","getLocalStream","navigator","mediaDevices","getUserMedia","audio","options","mirror","then","window","localStream","whoisOnline","catch","error","sendToPeer","local","socket","messageType","payload","socketID","emit","createPeerConnection","callback","pc","RTCPeerConnection","pcConfig","localConnection","peerConnections","onicecandidate","candidate","remote","oniceconnectionstatechange","ontrack","_remoteStream","remoteVideo","addTrack","_remoteVideo","MediaStream","remoteStream","selectedVideo","close","forEach","senders","push","_video","handleChatWindowToggle","chatWindow","shareScreen","getDisplayMedia","screenTrack","find","replaceTrack","onended","handleFullscreen","fullScreen","documentElement","requestFullscreen","exitFullscreen","status","urls","sdpContraints","sendChannels","disconnected","serviceIp","fileNameRef","createRef","mainAppDiv","controlsContent","fullscreen","statusBar","io","path","query","room","location","pathname","on","peerCount","addIceCandidate","RTCIceCandidate","handleSendChannelStatusChange","readyState","sendChannel","createDataChannel","onopen","onclose","handleReceiveMessage","JSON","parse","handleReceiveChannelStatusChange","receiveChannel","ondatachannel","channel","onmessage","createOffer","sdpConstraints","sdp","setLocalDescription","addStream","setRemoteDescription","RTCSessionDescription","createAnswer","addEventListener","classList","add","setTimeout","remove","stop","statusText","margin","height","send","stringify","CreateRoom","roomId","setRoomId","haveRoomId","setHaveRoomId","roomIdExamples","inputRoomId","currentText","letter","create","uuid","querySelector","history","count","typing","tme","slice","updateInputValue","defaultValue","Logo","aria-disabled","aria-label","pattern","title","exact","component","Room","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","URL","process","href","origin","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.df9e6c5f.chunk.js","sourcesContent":["import React from 'react';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport '../styles/Video.css';\r\n\r\nclass Video extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mic: true,\r\n      camera: true,\r\n      settings: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.videoStream) {\r\n      this.video.srcObject = this.props.videoStream\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    console.log(nextProps.videoStream);\r\n    if (nextProps.videoStream && nextProps.videoStream !== this.props.videoStream) {\r\n      this.video.srcObject = nextProps.videoStream;\r\n    }\r\n  }\r\n\r\n  muteMicHandler = (e) => {\r\n    const stream = this.video.srcObject.getTracks().filter(track => track.kind === 'audio');\r\n    this.setState(prevState => {\r\n      if(stream){\r\n        stream[0].enabled = !prevState.mic\r\n      }\r\n      return {mic: !prevState.mic}\r\n    })\r\n  };\r\n\r\n  muteVideoHandler = (e) => {\r\n    const stream = this.video.srcObject.getTracks().filter(track => track.kind === 'video');\r\n    this.setState(prevState => {\r\n      if(stream){\r\n        stream[0].enabled = !prevState.camera\r\n      }\r\n      return {camera: !prevState.camera}\r\n    })\r\n  };\r\n\r\n  render() {\r\n    const muteControls = this.props.showMuteControls && (\r\n      <div className=\"local-video-controls\">\r\n        <SettingsIcon className=\"settings\" />\r\n        <i onClick={this.muteMicHandler} style={{cursor: 'pointer', padding: 5, fontSize: 25, color: this.state.mic ? 'white' : 'red'}} className=\"material-icons\">\r\n          {this.state.mic ? 'mic' : 'mic_off'}\r\n        </i>\r\n        <i onClick={this.muteVideoHandler} style={{cursor: 'pointer', padding: 5, fontSize: 25, color: this.state.camera ? 'white' : 'red'}} className=\"material-icons\">\r\n          {this.state.camera ? 'videocam' : 'videocam_off'}\r\n        </i>\r\n      </div>\r\n    )\r\n    return (\r\n      <div\r\n        style={{ ...this.props.frameStyle }}\r\n      >\r\n        <video\r\n          id={this.props.id}\r\n          muted={this.props.muted}\r\n          autoPlay\r\n          style={{ ...this.props.videoStyles }}\r\n          // ref={ this.props.videoRef }\r\n          ref={(ref) => { this.video = ref }}\r\n        ></video>\r\n        {muteControls}\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default Video;\r\n","import React, { Component } from 'react'\r\nimport Video from './Video'\r\n\r\nclass Videos extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      rVideos: [],\r\n      remoteStreams: []\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.props.remoteStreams !== nextProps.remoteStreams) {\r\n\r\n      let _rVideos = nextProps.remoteStreams.map((rVideo, index) => {\r\n\r\n        const _videoTrack = rVideo.stream.getTracks().filter(track => track.kind === 'video');\r\n\r\n        let video = _videoTrack && (\r\n          <Video\r\n            videoStream={rVideo.stream}\r\n            frameStyle={{ width: 120, float: 'left', padding: '0 3px' }}\r\n            videoStyles={{\r\n              cursor: 'pointer',\r\n              objectFit: 'cover',\r\n              borderRadius: 3,\r\n              width: '100%'\r\n            }}\r\n            autoplay\r\n          />\r\n        ) || <div></div>;\r\n\r\n        return (\r\n          <div\r\n            id={rVideo.name}\r\n            onClick={() => this.props.switchVideo(rVideo)}\r\n            style={{ display: 'inline-block' }}\r\n            key={index}\r\n          >\r\n            {video}\r\n          </div>\r\n        )\r\n      })\r\n\r\n      this.setState({\r\n        remoteStreams: nextProps.remoteStreams,\r\n        rVideos: _rVideos\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          zIndex: 3,\r\n          position: 'fixed',\r\n          padding: '6px 3px',\r\n          backgroundColor: 'rgba(0,0,0,0.3)',\r\n          maxHeight: 120,\r\n          top: 'auto',\r\n          right: 10,\r\n          left: 10,\r\n          bottom: 10,\r\n          whiteSpace: 'nowrap'\r\n        }}\r\n      >\r\n        { this.state.rVideos}\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Videos;","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nvar Draggable = props => {\r\n  const [pressed, setPressed] = useState(false);\r\n  const [position, setPosition] = useState({ x: 0, y: 0 });\r\n  const ref = useRef();\r\n\r\n  // Monitor changes to position state and update DOM\r\n  useEffect(() => {\r\n    if (ref.current) {\r\n      ref.current.style.transform = `translate(${position.x}px, ${position.y}px)`\r\n    }\r\n  }, [position]);\r\n\r\n  // Update the current position if mouse is down\r\n  const onMouseMove = (event) => {\r\n    if (pressed) {\r\n      setPosition({\r\n        x: position.x + event.movementX,\r\n        y: position.y + event.movementY\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={props.style}\r\n      ref={ref}\r\n      onMouseMove={onMouseMove}\r\n      onMouseDown={() => setPressed(true)}\r\n      onMouseUp={() => setPressed(false)}>\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Draggable;","import React, { useState } from 'react'\r\n\r\nvar DragDrop = props => {\r\n  const [bgColor, setBgColor] = useState('transparent')\r\n\r\n  const changeBgColor = (state) => {\r\n    console.log(state)\r\n    setBgColor(state && 'green' || 'transparent')\r\n    // setBgColor('green')\r\n  }\r\n\r\n  return (\r\n    <div style={{\r\n      backgroundColor: bgColor\r\n    }} className={props.className}\r\n      // ref={ref}\r\n      onDragEnter={(e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        changeBgColor(true)\r\n        e.dataTransfer.dropEffect = 'copy'\r\n        console.log('DragEnter', e.dataTransfer.items.length)\r\n      }}\r\n      \r\n      onDragLeave={(e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        changeBgColor(false)\r\n        console.log('onDragLeave')\r\n      }}\r\n\r\n      onDragOver={(e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        console.log('onDragOver')\r\n      }}\r\n\r\n      onDrop={(e) => { \r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        changeBgColor(false)\r\n        console.log(e.dataTransfer.items)\r\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\r\n          props.sendFiles(e.dataTransfer.files)\r\n        }\r\n      }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DragDrop","import React, { useState, useEffect } from 'react'\r\nimport DragDrop from './dragDrop';\r\n\r\nconst Chat = props => {\r\n  const [message, setMessage] = useState('')\r\n  const [user, setUser] = useState({ uid: 0, })\r\n  const [imageZoom, setImageZoom] = useState(false)\r\n  const [selectedImage, setSelectedImage] = useState('')\r\n\r\n  const scrollToBottom = () => {\r\n    const chat = document.getElementById(\"chatList\");\r\n    chat.scrollTop = chat.scrollHeight\r\n  }\r\n\r\n  useEffect(() => {\r\n    scrollToBottom()\r\n    setUser({ uid: props.user.uid, })\r\n  }, [props])\r\n\r\n  const sendMessage = (msg) => {\r\n    props.sendMessage(msg);\r\n    scrollToBottom()\r\n  }\r\n\r\n  const handleSubmit = event => {\r\n    if (message === '') return\r\n    event.preventDefault();\r\n    sendMessage({type:'text', message: { id: user.uid, sender: { uid: user.uid, }, data: { text: message } }})\r\n    setMessage('')\r\n  };\r\n\r\n  const handleChange = event => {\r\n    setMessage(event.target.value)\r\n  }\r\n\r\n  const renderMessage = (userType, data) => {\r\n    console.log('===========', data)\r\n    const message = data.message\r\n\r\n    const msgDiv = data.type === 'text' && (\r\n      <div className=\"msg\">\r\n        <p>{message.sender.uid}</p>\r\n        <div className=\"message\"> {message.data.text}</div>\r\n      </div>\r\n    ) || (\r\n      <div className=\"msg\">\r\n        <p>{message.sender.uid}</p>\r\n        <img\r\n          alt=\"message\"\r\n          onClick={() => {\r\n            setImageZoom(true)\r\n            setSelectedImage(message.data)\r\n          }}\r\n          className=\"message\"\r\n          style={{\r\n            width: 200,\r\n            // height: 100\r\n            cursor: 'pointer',\r\n          }}\r\n          src={message.data} />\r\n      </div>\r\n    )\r\n\r\n    return (<li className={userType} >{ msgDiv }</li>)\r\n\r\n  }\r\n\r\n  const showEnlargedImage = (data) => {\r\n    return (<img\r\n      alt=\"zoom\"\r\n      src={data}\r\n      style={{\r\n        backgroundColor: 'black',\r\n        position: 'relative',\r\n        zIndex: 100,\r\n        display: 'block',\r\n        cursor: 'pointer',\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        padding: 20,\r\n        borderRadius: 20,\r\n      }}\r\n      onClick={() => setImageZoom(false)}\r\n    />)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {imageZoom && showEnlargedImage(selectedImage)}\r\n\r\n      <div className=\"chatWindow\" style={{\r\n        zIndex: 10,\r\n        position: 'absolute',\r\n        right: 5,\r\n        top: 190,\r\n        bottom: 140,\r\n        width: 350,\r\n        // height: 650,\r\n    }}>\r\n        <ul className=\"chat\" id=\"chatList\">\r\n          {props.messages.map(data => (\r\n            <div key={data.id}>\r\n              {user.uid === data.message.sender.uid ? renderMessage('self', data) : (renderMessage('other', data))}\r\n            </div>\r\n          ))}\r\n        </ul>\r\n        <DragDrop\r\n          className=\"chatInputWrapper\"\r\n          sendFiles={(files) => {\r\n            const reader = new FileReader()\r\n            reader.onload = (e) => {\r\n              //https://blog.mozilla.org/webrtc/large-data-channel-messages/\r\n              //https://lgrahl.de/articles/demystifying-webrtc-dc-size-limit.html\r\n              const maximumMessageSize = 262118 //65535 <=== 64KiB // 16384 <=== 16KiB to be safe\r\n              if (e.target.result.length <= maximumMessageSize)\r\n              \r\n                sendMessage({ type: 'image', message: { id: user.uid, sender: { uid: user.uid, }, data: e.target.result } })\r\n              else\r\n                alert('Message exceeds Maximum Message Size!')\r\n            }\r\n\r\n            reader.readAsDataURL(files[0])\r\n          }}\r\n        >\r\n          <div>\r\n            <form onSubmit={handleSubmit}>\r\n              <input\r\n                className=\"textarea input\"\r\n                type=\"text\"\r\n                placeholder=\"Enter your message...\"\r\n                onChange={handleChange}\r\n                value={message}\r\n              />\r\n            </form>\r\n          </div>\r\n        </DragDrop>\r\n      </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Chat;","/* eslint-disable no-mixed-operators */\r\nimport React, { createRef } from 'react';\r\nimport io from 'socket.io-client';\r\nimport Video from './Video';\r\nimport Videos from './Videos';\r\nimport Draggable from './draggable';\r\nimport Chat from './Chat';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport ScreenShareTwoToneIcon from '@material-ui/icons/ScreenShareTwoTone';\r\nimport ChatBubbleOutlineTwoToneIcon from '@material-ui/icons/ChatBubbleOutlineTwoTone';\r\nimport FullscreenRoundedIcon from '@material-ui/icons/FullscreenRounded';\r\nimport '../styles/Room.css';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      localStream: null,\r\n      remoteStream: null,\r\n      remoteStreams: [],\r\n      peerConnections: {},\r\n      selectedVideo: null,\r\n      status: 'Please Wait...',\r\n      pcConfig: {            //Setting up STUN server for connection in two different networks\r\n        \"iceServers\": [\r\n          {\r\n            urls: 'stun:stun.l.google.com:19302'\r\n          }\r\n        ]\r\n      },\r\n      sdpContraints: {\r\n        'mandatory': {\r\n          'OfferToReceiveAudio': true,\r\n          'OfferToReceiveVideo': true\r\n        }\r\n      },\r\n      messages: [],\r\n      sendChannels: [],\r\n      disconnected: false,\r\n      chatWindow: false,\r\n      fullScreen: false\r\n    }\r\n\r\n    this.serviceIp = '/webrtcPeer';\r\n\r\n    // this.localVideoRef = createRef();\r\n    // this.remoteVideoRef = createRef();\r\n    this.fileNameRef = createRef(\"\");\r\n    this.mainAppDiv = createRef();\r\n    this.controlsContent = createRef();\r\n    this.fullscreen = createRef();\r\n    this.statusBar = createRef();\r\n\r\n    this.socket = null;\r\n    this.senders = [];\r\n    // this.candidates = [];\r\n  };\r\n\r\n  getLocalStream = () => {\r\n    const contraints = { video: true, audio: true, options: { mirror: true } };\r\n    navigator.mediaDevices.getUserMedia(contraints)\r\n      .then((stream) => {\r\n        // this.localVideoRef.current.srcObject = stream;\r\n        window.localStream = stream;\r\n        // this.localVideoref.current.srcObject = stream\r\n        // this.pc.addStream(stream);\r\n        this.setState({\r\n          localStream: stream\r\n        })\r\n\r\n        this.whoisOnline()\r\n      })\r\n      .catch((error) => {\r\n        console.log('getUserMediaError', error);\r\n      });\r\n  };\r\n\r\n  whoisOnline = () => {\r\n    this.sendToPeer('onlinePeers', null, { local: this.socket.id });\r\n  };\r\n\r\n  sendToPeer = (messageType, payload, socketID) => {\r\n    this.socket.emit(messageType, {\r\n      socketID,\r\n      payload\r\n    })\r\n  };\r\n\r\n  createPeerConnection = (socketID, callback) => {\r\n\r\n    try {\r\n      let pc = new RTCPeerConnection(this.state.pcConfig);\r\n      this.setState({\r\n        localConnection: pc\r\n      })\r\n\r\n      // add pc to peerConnections object\r\n      const peerConnections = { ...this.state.peerConnections, [socketID]: pc }\r\n      this.setState({\r\n        peerConnections\r\n      })\r\n\r\n      pc.onicecandidate = (e) => {\r\n        if (e.candidate) {\r\n          this.sendToPeer('candidate', e.candidate, {\r\n            local: this.socket.id,\r\n            remote: socketID\r\n          })\r\n        }\r\n      }\r\n\r\n      pc.oniceconnectionstatechange = (e) => {\r\n        // if (pc.iceConnectionState === 'disconnected') {\r\n        //   const remoteStreams = this.state.remoteStreams.filter(stream => stream.id !== socketID)\r\n\r\n        //   this.setState({\r\n        //     remoteStream: remoteStreams.length > 0 && remoteStreams[0].stream || null,\r\n        //   })\r\n        // }\r\n\r\n      }\r\n\r\n      pc.ontrack = (e) => {\r\n\r\n        let _remoteStream = null;\r\n        let remoteStreams = this.state.remoteStreams;\r\n        let remoteVideo = {};\r\n\r\n        //1. check if streams already exist \r\n        const rVideos = this.state.remoteStreams.filter(stream => stream.id === socketID);\r\n        //2. if not then add track\r\n        if (rVideos.length) {\r\n          _remoteStream = rVideos[0].stream\r\n          _remoteStream.addTrack(e.track, _remoteStream)\r\n          remoteVideo = {\r\n            ...rVideos[0],\r\n            stream: _remoteStream,\r\n          }\r\n          remoteStreams = this.state.remoteStreams.map(_remoteVideo => {\r\n            return _remoteVideo.id === remoteVideo.id && remoteVideo || _remoteVideo\r\n          })\r\n        }\r\n        else {\r\n          _remoteStream = new MediaStream();\r\n          _remoteStream.addTrack(e.track, _remoteStream);\r\n\r\n          remoteVideo = {\r\n            id: socketID,\r\n            name: socketID,\r\n            stream: _remoteStream\r\n          }\r\n          remoteStreams = [...this.state.remoteStreams, remoteVideo]\r\n        }\r\n        //3. if not a new stream and new track\r\n        // const remoteVideo = {\r\n        //   id: socketID,\r\n        //   name: socketID,\r\n        //   stream: e.streams[0]\r\n        // }\r\n\r\n        this.setState(prevState => {\r\n\r\n          // If we already have a stream in display let it stay the same, otherwise use the latest stream\r\n          // const remoteStream = prevState.remoteStreams.length > 0 ? {} : { remoteStream: e.streams[0] }\r\n          const remoteStream = prevState.remoteStreams.length > 0 ? {} : { remoteStream: _remoteStream }\r\n\r\n\r\n          // get currently selected video\r\n          let selectedVideo = prevState.remoteStreams.filter(stream => stream.id === prevState.selectedVideo.id)\r\n          // if the video is still in the list, then do nothing, otherwise set to new video stream\r\n          selectedVideo = selectedVideo.length ? {} : { selectedVideo: remoteVideo }\r\n\r\n          return {\r\n            // selectedVideo: remoteVideo,\r\n            ...selectedVideo,\r\n            // remoteStream: e.streams[0],\r\n            ...remoteStream,\r\n            remoteStreams,\r\n          }\r\n        })\r\n      }\r\n\r\n      pc.close = () => {\r\n        // alert('GONE')\r\n      }\r\n\r\n      if (this.state.localStream)\r\n        // pc.addStream(this.state.localStream)\r\n        this.state.localStream.getTracks().forEach(track => {\r\n          this.senders.push(pc.addTrack(track, this.state.localStream));\r\n        })\r\n\r\n      // return pc\r\n      callback(pc)\r\n    }\r\n    catch (e) {\r\n      console.log('Something went wrong! pc not created!!', e)\r\n      // return;\r\n      callback(null)\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.socket = io(\r\n      this.serviceIp,\r\n      {\r\n        path: '/webrtc-video-calling',\r\n        query: {\r\n          room: window.location.pathname\r\n        }\r\n      }\r\n    );\r\n\r\n    this.socket.on('connection-success', data => {\r\n      this.getLocalStream()\r\n      const status = data.peerCount > 1 ? `Total Connected Peers in room ${window.location.pathname}: ${data.peerCount}` : `Waiting for other peers to connect`;\r\n      this.setState({\r\n        status: status,\r\n        messages: data.messages\r\n      })\r\n    });\r\n\r\n    this.socket.on('joined-peers', data => {\r\n      this.setState({\r\n        status: data.peerCount > 1 ? `Total Connected Peers in room ${window.location.pathname}: ${data.peerCount}` : `Waiting for other peers to connect`\r\n      })\r\n    })\r\n\r\n    this.socket.on('peer-disconnected', data => {\r\n      console.log('peer-disconnected', data)\r\n\r\n      const remoteStreams = this.state.remoteStreams.filter(stream => stream.id !== data.socketID)\r\n\r\n      this.setState(prevState => {\r\n        // check if disconnected peer is the selected video and if there still connected peers, then select the first\r\n        const selectedVideo = prevState.selectedVideo.id === data.socketID && remoteStreams.length ? { selectedVideo: remoteStreams[0] } : null\r\n\r\n        return {\r\n          // remoteStream: remoteStreams.length > 0 && remoteStreams[0].stream || null,\r\n          remoteStreams,\r\n          ...selectedVideo,\r\n          status: data.peerCount > 1 ? `Total Connected Peers in room ${window.location.pathname}: ${data.peerCount}` : `Waiting for other peers to connect`\r\n        }\r\n      }\r\n      )\r\n    })\r\n\r\n    // this.socket.on('offerOrAnswer', (sdp) => {\r\n    //   this.textref.value = JSON.stringify(sdp);\r\n    //   this.pc.setRemoteDescription(new RTCSessionDescription(sdp));\r\n    // });\r\n\r\n    this.socket.on('candidate', (data) => {\r\n      // this.candidates = [...this.candidates, candidate];\r\n      const pc = this.state.peerConnections[data.socketID];\r\n      if (pc) {\r\n        pc.addIceCandidate(new RTCIceCandidate(data.candidate));\r\n      }\r\n    });\r\n\r\n    this.socket.on('online-peer', socketID => {\r\n      console.log('connected peers ...', socketID)\r\n\r\n      // create and send offer to the peer (data.socketID)\r\n      // 1. Create new pc\r\n      this.createPeerConnection(socketID, pc => {\r\n        // 2. Create Offer\r\n        if (pc) {\r\n\r\n          // Send Channel\r\n          const handleSendChannelStatusChange = (event) => {\r\n            console.log('send channel status: ' + this.state.sendChannels[0].readyState);\r\n          }\r\n\r\n          const sendChannel = pc.createDataChannel('sendChannel');\r\n          sendChannel.onopen = handleSendChannelStatusChange;\r\n          sendChannel.onclose = handleSendChannelStatusChange;\r\n\r\n          this.setState(prevState => {\r\n            return {\r\n              sendChannels: [...prevState.sendChannels, sendChannel]\r\n            }\r\n          })\r\n\r\n\r\n          // Receive Channels\r\n          const handleReceiveMessage = (event) => {\r\n            const message = JSON.parse(event.data);\r\n            console.log(message)\r\n            this.setState(prevState => {\r\n              return {\r\n                messages: [...prevState.messages, message]\r\n              }\r\n            })\r\n          }\r\n\r\n          const handleReceiveChannelStatusChange = (event) => {\r\n            if (this.receiveChannel) {\r\n              console.log(\"receive channel's status has changed to \" + this.receiveChannel.readyState);\r\n            }\r\n          }\r\n\r\n          const receiveChannelCallback = (event) => {\r\n            const receiveChannel = event.channel\r\n            receiveChannel.onmessage = handleReceiveMessage;\r\n            receiveChannel.onopen = handleReceiveChannelStatusChange;\r\n            receiveChannel.onclose = handleReceiveChannelStatusChange;\r\n          }\r\n\r\n          pc.ondatachannel = receiveChannelCallback;\r\n\r\n\r\n          pc.createOffer(this.state.sdpConstraints)\r\n            .then(sdp => {\r\n              pc.setLocalDescription(sdp)\r\n\r\n              this.sendToPeer('offer', sdp, {\r\n                local: this.socket.id,\r\n                remote: socketID\r\n              })\r\n            })\r\n        }\r\n      })\r\n    });\r\n\r\n    this.socket.on('offer', data => {\r\n      this.createPeerConnection(data.socketID, pc => {\r\n        pc.addStream(this.state.localStream);\r\n\r\n        // Send Channel\r\n        const handleSendChannelStatusChange = (event) => {\r\n          console.log('send channel status: ' + this.state.sendChannels[0].readyState);\r\n        }\r\n\r\n        const sendChannel = pc.createDataChannel('sendChannel');\r\n        sendChannel.onopen = handleSendChannelStatusChange;\r\n        sendChannel.onclose = handleSendChannelStatusChange;\r\n\r\n        this.setState(prevState => {\r\n          return {\r\n            sendChannels: [...prevState.sendChannels, sendChannel]\r\n          }\r\n        })\r\n\r\n\r\n        // Receive Channels\r\n        const handleReceiveMessage = (event) => {\r\n          const message = JSON.parse(event.data);\r\n          console.log(message)\r\n          this.setState(prevState => {\r\n            return {\r\n              messages: [...prevState.messages, message]\r\n            }\r\n          })\r\n        }\r\n\r\n        const handleReceiveChannelStatusChange = (event) => {\r\n          if (this.receiveChannel) {\r\n            console.log(\"receive channel's status has changed to \" + this.receiveChannel.readyState);\r\n          }\r\n        }\r\n\r\n        const receiveChannelCallback = (event) => {\r\n          const receiveChannel = event.channel\r\n          receiveChannel.onmessage = handleReceiveMessage;\r\n          receiveChannel.onopen = handleReceiveChannelStatusChange;\r\n          receiveChannel.onclose = handleReceiveChannelStatusChange;\r\n        }\r\n\r\n        pc.ondatachannel = receiveChannelCallback;\r\n\r\n        pc.setRemoteDescription(new RTCSessionDescription(data.sdp))\r\n          .then(() => {\r\n            pc.createAnswer(this.state.sdpContraints)\r\n              .then(sdp => {\r\n                pc.setLocalDescription(sdp)\r\n\r\n                this.sendToPeer('answer', sdp, {\r\n                  local: this.socket.id,\r\n                  remote: data.socketID\r\n                })\r\n              })\r\n          })\r\n      });\r\n\r\n    });\r\n\r\n    this.socket.on('answer', data => {\r\n      // get remote's peerConnection\r\n      const pc = this.state.peerConnections[data.socketID]\r\n      console.log(data.sdp)\r\n      pc.setRemoteDescription(new RTCSessionDescription(data.sdp)).then(() => { })\r\n    })\r\n\r\n\r\n    //hover effect\r\n    this.mainAppDiv.current.addEventListener('mousemove', () => {\r\n      this.controlsContent.current.classList.add('visible');\r\n      this.statusBar.current.classList.add('visible');\r\n      setTimeout(() => {\r\n        this.controlsContent.current.classList.remove('visible');\r\n        this.statusBar.current.classList.remove('visible');\r\n      }, 5000);\r\n    });\r\n\r\n  };\r\n\r\n  //Switching Video\r\n  switchVideo = (_video) => {\r\n    this.setState({\r\n      selectedVideo: _video\r\n    })\r\n  };\r\n\r\n  //Toggle Chat Window\r\n  handleChatWindowToggle = () => {\r\n    if (this.state.chatWindow) {\r\n      this.setState({\r\n        chatWindow: false\r\n      })\r\n    }\r\n    else {\r\n      this.setState({\r\n        chatWindow: true\r\n      })\r\n    }\r\n  };\r\n\r\n  //Share Screen\r\n  shareScreen = () => {\r\n    navigator.mediaDevices.getDisplayMedia({ cursor: true }).then(stream => {\r\n      const screenTrack = stream.getTracks()[0];\r\n      this.senders.find(sender => sender.track.kind === 'video').replaceTrack(screenTrack);\r\n      screenTrack.onended = function () {\r\n        this.senders.find(sender => sender.track.kind === \"video\")\r\n          .replaceTrack(this.state.localStream.getTracks()[1]);\r\n      }\r\n    })\r\n  };\r\n\r\n  handleFullscreen = () => {\r\n    if(this.state.fullScreen === false){\r\n    document.documentElement.requestFullscreen();\r\n    this.setState({\r\n      fullScreen: true\r\n    });\r\n    }\r\n    else{\r\n      document.exitFullscreen();\r\n      this.setState({\r\n        fullScreen: false\r\n      });\r\n    }\r\n  }\r\n\r\n  //Sending Large Data Files P2P\r\n\r\n  // handleReceivingData = (data) => {\r\n\r\n  // };\r\n\r\n  // download = () => {\r\n\r\n  // };\r\n\r\n  // selectFile = (e) => {\r\n\r\n  // };\r\n\r\n  // sendFile = () => {\r\n  //   console.log('Created local peer connection', this.state.localConnection);\r\n  //   this.sendChannel = this.state.localConnection.createDataChannel('sendDataChannel');\r\n  //   this.sendChannel = 'arraybuffer';\r\n  //   console.log('Created send Data Channel');\r\n\r\n  //   this.sendChannel.addEventListener('open', this.onSendChannelStateChange);\r\n  //   this.sendChannel.addEventListener('close', this.onSendChannelStateChange);\r\n  //   this.sendChannel.addEventListener('error', error => console.error('Error in sendChannel:', error));\r\n\r\n  // };\r\n\r\n  // onSendChannelStateChange = () => {\r\n  //   const readyState = this.sendChannel.readyState;\r\n  //   console.log(`Send channel state is: ${readyState}`);\r\n  //   if (readyState === 'open') {\r\n  //     this.sendData();\r\n  //   }\r\n  // }\r\n\r\n  render() {\r\n\r\n    if (this.state.disconnected) {\r\n      this.socket.close()\r\n      this.state.localStream.getTracks().forEach(track => track.stop())\r\n      return (<div>You have successfully Disconnected</div>)\r\n    }\r\n\r\n    const statusText = <div style={{ color: 'red', padding: 8 }}>{this.state.status}</div>;\r\n\r\n    return (\r\n      <div className=\"app\" ref={this.mainAppDiv}>\r\n        <Draggable style={{\r\n          zIndex: 101,\r\n          position: 'absolute',\r\n          right: 0,\r\n          cursor: 'move'\r\n        }}>\r\n          <Video\r\n            videoStyles={{\r\n              zIndex: 2,\r\n              // position: 'absolute',\r\n              // right: 0,\r\n              width: 200,\r\n              // height: 195,\r\n              // margin: 5,\r\n              // backgroundColor: 'black'\r\n            }}\r\n            frameStyle={{\r\n              width: 200,\r\n              margin: 5,\r\n              borderRadius: 5,\r\n              backgroundColor: 'black'\r\n\r\n            }}\r\n            showMuteControls={true}\r\n            // ref={this.localVideoRef}\r\n            videoStream={this.state.localStream}\r\n            autoPlay muted\r\n          >\r\n          </Video>\r\n        </Draggable>\r\n        <Video\r\n          videoStyles={{\r\n            zIndex: 1,\r\n            position: 'fixed',\r\n            bottom: 0,\r\n            width: '100%',\r\n            height: '100%',\r\n            backgroundColor: 'rgb(27, 38, 56)'\r\n          }}\r\n          // ref={ this.remoteVideoref }\r\n          videoStream={this.state.selectedVideo && this.state.selectedVideo.stream}\r\n          autoPlay>\r\n        </Video>\r\n\r\n        <br />\r\n        <div className=\"statusBar\" ref={this.statusBar}>\r\n          <div style={{\r\n            margin: 5,\r\n            backgroundColor: '#cdc4ff4f',\r\n            padding: 10,\r\n            borderRadius: 5,\r\n\r\n          }}> {statusText}</div>\r\n        </div>\r\n        <div>\r\n          <Videos\r\n            switchVideo={this.switchVideo}\r\n            remoteStreams={this.state.remoteStreams}\r\n          ></Videos>\r\n        </div>\r\n        <br />\r\n        {this.state.chatWindow ? <Chat\r\n          user={{\r\n            uid: this.socket && this.socket.id || ''\r\n          }}\r\n          messages={this.state.messages}\r\n          sendMessage={(message) => {\r\n            this.setState(prevState => {\r\n              return { messages: [...prevState.messages, message] }\r\n            })\r\n            this.state.sendChannels.map(sendChannel => {\r\n              sendChannel.readyState === 'open' && sendChannel.send(JSON.stringify(message))\r\n            })\r\n            this.sendToPeer('new-message', JSON.stringify(message), { local: this.socket.id })\r\n          }}\r\n        /> : <div></div>}\r\n\r\n        {/* Controls */}\r\n          <div className=\"controls-content\" ref={this.controlsContent}>\r\n            <div className=\"controls-body\">\r\n              <div className=\"button-group-left\">\r\n\r\n                <div onClick={this.handleChatWindowToggle}><ChatBubbleOutlineTwoToneIcon className=\"control-buttons\" /></div>\r\n                <div onClick={this.shareScreen}><ScreenShareTwoToneIcon className=\"control-buttons\" /></div>\r\n\r\n              </div>\r\n\r\n              <div className=\"button-group-center\" onClick={(e) => { this.setState({ disconnected: true }) }}>\r\n                <CancelIcon className=\"control-buttons cancel\" />\r\n\r\n              </div>\r\n\r\n              <div className=\"button-group-right\">\r\n              <div className=\"fullscreenBtn\" onClick={this.handleFullscreen}>\r\n                <FullscreenRoundedIcon className=\"control-buttons\" ref={this.fullscreen} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","export default __webpack_public_path__ + \"static/media/video-conference.074ca7fc.svg\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { v1 as uuid } from 'uuid';\r\nimport SettingsApplicationsIcon from '@material-ui/icons/SettingsApplications';\r\nimport Logo from '../images/video-conference.svg';\r\nimport '../styles/CreateRoom.css';\r\n\r\nconst CreateRoom = (props) => {\r\n\r\n  const [roomId, setRoomId] = useState([]);\r\n  const [haveRoomId, setHaveRoomId] = useState(false);\r\n\r\n  let roomIdExamples = ['YouOnlyLiveOnce', 'CosmosIsReal', 'ImpossibleIsForTheUnwilling'\r\n    , 'NarrativeStormsSettlePersonally', 'HomeDesktopSacrificeRecklessly', 'ElementaryMusicianPlantOverall'];\r\n  let inputRoomId = useRef();\r\n  let currentText = useRef();\r\n  let letter = useRef();\r\n\r\n  useEffect(() => {\r\n    let count = 0;\r\n    let index = 0;\r\n    // let currentText = '';\r\n    // let letter = '';\r\n\r\n    (function typing(tme) {\r\n      if (count === roomIdExamples.length) {\r\n        count = 0;\r\n      }\r\n      currentText.current = roomIdExamples[count];\r\n      letter.current = currentText.current.slice(0, ++index);\r\n      if (document.querySelector('.roomIdInput') !== null) {\r\n        document.querySelector('.roomIdInput').placeholder = letter.current;\r\n      }\r\n      if (letter.current.length === currentText.current.length) {\r\n        // setTimeout(() => {\r\n        count++;\r\n        index = 0;\r\n        // }, 2000);\r\n      }\r\n      setTimeout(typing, 300);\r\n    }());\r\n  }, []);\r\n\r\n\r\n\r\n  function create() {\r\n    const id = uuid();\r\n    if (document.querySelector('.roomIdInput').value === '') {\r\n      setRoomId(currentText.current);\r\n    }\r\n    props.history.push(`/${roomId}`);\r\n  }\r\n\r\n  const updateInputValue = (value) => {\r\n    console.log(value);\r\n    setRoomId(value);\r\n    document.querySelector('.roomIdInput').defaultValue = roomId;\r\n  }\r\n\r\n  const handleJoinRoom = () => {\r\n    if(haveRoomId === false){\r\n      setHaveRoomId(true);\r\n    }\r\n    else{\r\n      setHaveRoomId(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"createRoom\">\r\n      <div className=\"heading\">\r\n        <div className=\"logo\">\r\n          <img src={Logo} alt=\"logo\" />\r\n          <h1 className=\"logo-name\">Rova Meet</h1>\r\n        </div>\r\n        <SettingsApplicationsIcon className=\"settings\" />\r\n      </div>\r\n      <div className=\"enter-room\">\r\n        <div className=\"enter-room-container\">\r\n          <form onSubmit={create}>\r\n            <input\r\n              aria-disabled=\"false\"\r\n              aria-label=\"Meeting\"\r\n              className=\"roomIdInput\"\r\n              type=\"text\"\r\n              pattern=\"^[^?&amp;:&quot;'%#]+$\"\r\n              onChange={e => updateInputValue(e.target.value)}\r\n              ref={inputRoomId}\r\n              title=\"Meeting name should not contain any of these characters: ?, &amp;, :, ', &quot;, %, #.\"\r\n            />\r\n          </form>\r\n        </div>\r\n        <button\r\n          aria-disabled=\"false\"\r\n          aria-label=\"Start meeting\"\r\n          className=\"createRoomIdButton\"\r\n          onClick={create}>\r\n          Create Room\r\n          </button>\r\n      </div>\r\n\r\n      <div className=\"roomIdQues-container\">\r\n        <h5 className=\"roomIdQuestion\">Already have a Room ID?</h5>\r\n        <button className=\"joinRoomQuesBtn\" onClick={handleJoinRoom}>Join Room</button>\r\n      </div>\r\n\r\n      {haveRoomId ? <div className=\"join-room\">\r\n        <div className=\"join-room-container\">\r\n          <form onSubmit={create}>\r\n            <input\r\n              aria-disabled=\"false\"\r\n              aria-label=\"Meeting\"\r\n              className=\"roomIdInput\"\r\n              type=\"text\"\r\n              pattern=\"^[^?&amp;:&quot;'%#]+$\"\r\n              onChange={e => updateInputValue(e.target.value)}\r\n              ref={inputRoomId}\r\n              title=\"Meeting name should not contain any of these characters: ?, &amp;, :, ', &quot;, %, #.\"\r\n            />\r\n          </form>\r\n        </div>\r\n        <button\r\n          aria-disabled=\"false\"\r\n          aria-label=\"Join meeting\"\r\n          className=\"joinRoomIdButton\"\r\n          onClick={create}>\r\n          Join Room\r\n          </button>\r\n      </div> : <div></div>}\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateRoom;\r\n","import React, { Component } from 'react';\nimport Room from './components/Room';\nimport CreateRoom from './components/CreateRoom';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={CreateRoom} />\n            <Route path=\"/:room\" component={Room} />\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();"],"sourceRoot":""}